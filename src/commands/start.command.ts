import { Markup, Telegraf } from "telegraf";
import { Command } from "./command.class";
import { IBotContext } from "../context/context.interface";
import { take_all_goods } from "../button functions/take_all_goods.function";

export class StartCommand extends Command {
    
    constructor(bot: Telegraf<IBotContext>){
        super(bot);
    }

    handle(): void {
        this.bot.start((ctx) => {
            console.log(ctx.session);
            ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ", Markup.inlineKeyboard(
                [
                    [
                        Markup.button.callback("üìù –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤", "take_all_goods"),
                        Markup.button.callback("üìà –í—ã–ø–∏—Å–∫–∞ –¥–æ—Ö–æ–¥–∞", "take_extract"),
                        
                    ],
                    [
                        Markup.button.callback("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", "add_order"),
                        Markup.button.callback("‚ùå –û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç", "add_refund")
                    ],
                    [
                        
                        Markup.button.callback("üìú –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä", "take_good"),
                        Markup.button.callback("üìî –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", "take_category_goods"),
                        
                    ],
                    [
                        Markup.button.callback("üí¨ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞", "find_good"),
                        
                    ],
                ]

            ))
        })

        //this.bot.action("one", (ctx) => {
        //    ctx.session.choiceButton = true;
        //    ctx.editMessageText("1 button message true")

        //});

        this.bot.action("go_back", (ctx) => {
            console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–µ—Ä–Ω—É–ª—Å—è –Ω–∞–∑–∞–¥");
            ctx.reply("–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ", Markup.inlineKeyboard(
                [
                    [
                        Markup.button.callback("üìù –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤", "take_all_goods"),
                        Markup.button.callback("üìà –í—ã–ø–∏—Å–∫–∞ –¥–æ—Ö–æ–¥–∞", "take_extract"),
                    ],
                    [
                        Markup.button.callback("‚úÖ –î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑", "add_order"),
                        Markup.button.callback("‚ùå –û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç", "add_refund")
                    ],
                    [
                        Markup.button.callback("üìú –í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä", "take_good"),
                        Markup.button.callback("üìî –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é", "take_category_goods"),
                    ],
                    [
                        Markup.button.callback("üí¨ –ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞", "find_good"),
                    ],
                ]
            ));
        });

        this.bot.action("take_all_goods", (ctx) => {
            console.log("–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤")
            take_all_goods(ctx);
        });

        this.bot.action("take_extract", (ctx) => {
            console.log("–í—ã–ø–∏—Å–∫–∞ –¥–æ—Ö–æ–¥–∞")
            ctx.reply("–í—ã–ø–∏—Å–∫–∞ –¥–æ—Ö–æ–¥–∞")
        })

        this.bot.action("add_order", (ctx) => {
            console.log("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
            ctx.reply("–î–æ–±–∞–≤–∏—Ç—å –∑–∞–∫–∞–∑")
        })

        this.bot.action("add_refund", (ctx) => {
            console.log("–û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç")
            ctx.reply("–û—Ñ–æ—Ä–º–∏—Ç—å –≤–æ–∑–≤—Ä–∞—Ç")
        })

        this.bot.action("take_good", (ctx) => {
            console.log("–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä")
            ctx.reply("–í—ã–±—Ä–∞—Ç—å —Ç–æ–≤–∞—Ä")
        })

        this.bot.action("take_category_goods", (ctx) => {
            console.log("–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
            ctx.reply("–í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é")
        })

        this.bot.action("find_good", (ctx) => {
            console.log("–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞")
            ctx.reply("–ü–æ–∏—Å–∫ —Ç–æ–≤–∞—Ä–∞")
        })
    }
}